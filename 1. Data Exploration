# before I uploaded the datasets to BigQuery, I added "day_of_week" and "ride_length" columns in Excel. 
I used the =WEEKDAY function to find the day of the week, and found the ride length by subtracting the 
started_at column from the ended_at column. I formatted the ride length column as time ("37:30:55"). I 
then checked the cell formatting for the other columns and changed the started_at and ended_at columns 
to date and time formatting -

# combining data from July 2022 - July 2023 into the same table 

CREATE TABLE IF NOT EXISTS 'capstone-398715.bikeproject.combined_data' as
(SELECT *
FROM `capstone-398715.bikeproject.july_2022`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.aug_2022`
UNION ALL
SELECT * 
FROM `capstone-398715.bikeproject.sept_2022`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.oct_2022`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.nov_2022`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.dec_2022`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.jan_2023`
UNION ALL 
SELECT *
FROM `capstone-398715.bikeproject.feb_2023`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.mar_2023`
UNION ALL
SELECT * 
FROM `capstone-398715.bikeproject.april_2023`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.may_2023`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.june_2023`
UNION ALL
SELECT *
FROM `capstone-398715.bikeproject.july_2023`)

# finding the amount of rows in the combined data -

SELECT 
  COUNT(*)
FROM `capstone-398715.bikeproject.combined_data`

# checking that the data only has 3 distinct types of bike. the table has only the 3 bike types -

SELECT 
DISTINCT(rideable_type)
FROM `capstone-398715.bikeproject.combined_data`

# checking that rows only have positive values for their ride length. the query shows that table had a 
few rows with null values for ride lengths and ride lengths equal to 00:00:00 minutes

SELECT 
  ride_id,
  start_station_name,
  ride_length
FROM `capstone-398715.bikeproject.combined_data`
ORDER BY ride_length

# checking that the count of unique station ids and names are the same. the returned query shows there are some
station ids corresponding to multiple stations 

SELECT
  COUNT(DISTINCT start_station_id),
  COUNT(DISTINCT start_station_name)
FROM `capstone-398715.bikeproject.combined_data`

# finding which station ids correspond to multiple stations, and the number of unique stations they correspond to 

SELECT
  COUNT(DISTINCT start_station_name) num_of_stations,
  start_station_id
FROM `capstone-398715.bikeproject.cleaned_bike_data`
GROUP BY start_station_id
HAVING COUNT(DISTINCT start_station_name) > 1
ORDER BY COUNT(DISTINCT start_station_name) DESC, start_station_id





